import { MessageEmbed } from "discord.js";
import { InviteFriend, ChangeChannelCap, ChangeRegion } from "./discordFeatures.js"
import { ShowNewbieList, ShowQueueList, ShowQueueReqestsList } from "./discordGuildMasterFeatures.js"
import { ClanSize, ClanTime, SetRoles } from "./clan.js"
import { Roles } from "./roles.js"
import { newAuthToken } from "./httpCore.js"
import { GetClanMemberOnlineTime } from "./clanMember.js";
import { CatchError } from "./catcherror.js";

export class CommandManager{
    static commandList = [];

    static Run(args, message){
        try{
            var command = this.FindCommand(args[0]);
            if (command.status > 1) message.channel.send("–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞");
            else command?.callback(args, message);
        } catch (e) {
            CatchError(e, message.channel);
        }
    }
    static AddCommand(rights, status, name, title, description, callback){
        this.commandList.push({
            name: name,
            rights: rights,
            status: status,
            title: title,
            description: description,
            callback: callback
        });
    }
    static FindCommand(commandName){
        var foundCommands = this.commandList.filter(c => c.name === commandName);
        return foundCommands.length > 0 ? foundCommands[0] : null;
    }
    static GetStatus(){
        var embed = new MessageEmbed()
              .setAuthor("–°—Ç–∞—Ç—É—Å")
              .setColor(0x00AE86)
              .setFooter("That was a hÃ∂aÃ∂nÃ∂dÃ∂oÃ∂uÃ∂tÃ∂  hangover.")
              .setTimestamp()
        var restricted = [];
        var guildmaster = [];
        this.commandList.forEach(command => {
            var line = "";
            switch(command.status){
                case 0:
                    line += "<:yes:769922757592612874> ";
                    break;
                case 1:
                    line += "<:reload:781107772224962561> ";
                    break;
                default:
                    line += "<:no:769922772549632031> ";
                    break;
            }
            if(command.name != ""){
                line += command.name;
                switch(command.rights){
                    case "restricted":
                        restricted.push(line);
                        break;
                    case "guildmaster":
                        guildmaster.push(line);
                        break;
                }
            }
        });
        embed.addField("Restricted", restricted.join("\n"), true)
        embed.addField("Guildmaster", guildmaster.filter((_,i) => i <  guildmaster.length/2).join("\n"), true)
        embed.addField("Guildmaster", guildmaster.filter((_,i) => i >= guildmaster.length/2).join("\n"), true)
        return embed;
    }
    static GetRestrictedHelp(){
        var embed = new MessageEmbed()
              .setAuthor("Horobot :: –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:")
              .setColor(0x00AE86)
              .setThumbnail('https://images-ext-1.discordapp.net/external/veZptUu_KDKmwtUJX5QT3QxESYCaRp4_k0XUwEQxubo/https/i.imgur.com/e9DIB8e.png')
              .setFooter("Horobot", "https://cdn.discordapp.com/avatars/543342030768832524/7da47eaca948d9874b66fc5884ca2d00.png")
              .setTimestamp()
        this.commandList.filter(c => (c.rights === 'restricted' && c.status == 0)).forEach(command => {
            embed.addField(command.title, command.description);
        });
        return embed;
    }
    static GetGuildMasterHelp(){
        var embed = new MessageEmbed()
              .setAuthor("Horobot :: –°–ø–∏—Å–æ–∫ –ì–ú-—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥:")
              .setColor(0x00AE86)
              .setThumbnail('https://images-ext-1.discordapp.net/external/veZptUu_KDKmwtUJX5QT3QxESYCaRp4_k0XUwEQxubo/https/i.imgur.com/e9DIB8e.png')
              .setFooter("Horobot", "https://cdn.discordapp.com/avatars/543342030768832524/7da47eaca948d9874b66fc5884ca2d00.png")
              .setTimestamp()
        this.commandList.filter(c => (c.rights === 'guildmaster' && c.status == 0)).forEach(command => {
            embed.addField(command.title, command.description);
        });
        return embed;
    }
    static CheckRights(commandName, rights){
        var command = this.FindCommand(commandName);
        return command?.rights == rights;
    }
    static IsGuildMasterCommand(commandName){
        return this.CheckRights(commandName, 'guildmaster');
    }
    static IsRestrictedCommand(commandName){
        return this.CheckRights(commandName, 'restricted');
    }
    static IsCommonCommand(commandName){
        return this.CheckRights(commandName, 'common');
    }
    static IsDeveloperCommand(commandName){
        return this.CheckRights(commandName, 'developer');
    }
    static Init(){
        this.AddCommand("developer", 0, "status", "!status", "—Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥;", function(args, message){
            message.channel.send(CommandManager.GetStatus());
        });
        this.AddCommand("developer", 0, "oauth2", "!oauth2", "–≤—ã—Å–ª–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏;", function(args, message){
            message.channel.send(`https://www.bungie.net/ru/OAuth/Authorize?response_type=code&client_id=${config.d2clientId}&state=12345`); 
        });
        this.AddCommand("developer", 0, "code", "!code", "—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏;", function(args, message){
            newAuthToken(args[1]);
        });


        this.AddCommand("common", 0, "ping", "!ping", "testing functionality", function(args, message){
            message.channel.send('pong '+args[0]);
        });
        this.AddCommand("common", 0, "rand", "!rand", "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —ç–º–æ–¥–∂–∏–∫", function(args, message){
            message.channel.send(emoji.random().emoji);
        });
        this.AddCommand("common", 0, "clown", "!clown", "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–æ—É–Ω–∞", function(args, message){
            message.channel.send('ü§°');
        });

        //case '—Å–±–æ—Ä':			raid.create_raid(message, args);							break;
        //case 'mymt':			clantime.membertime(message, message.member.id, (args.length > 1 ? args[1] : 7), false);	break;
        //case 'medals':		medalstat.medals(message);									break;
        //case 'triumph':		seals.triumph(message, (args.length > 1 ? args[1] : 0));	break;
        //case 'triumphs':		triumphs.triumphs(message, (args.length > 1 ? 1 : null));	break;
        //case 'rl':			raidleader.rl(message.channel, (args.length > 1 ? args[1] : message.member.user.id), (args.length > 2 ? args[2] : 7));	break;
        
        this.AddCommand("restricted", 0, "cap", "!cap NUMBER", "–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –¥–æ NUMBER –º–µ—Å—Ç;", function(args, message){
            ChangeChannelCap(message, (args.length > 1 ? args[1] : 0));
        });
        this.AddCommand("restricted", 0, "help", "!help", "—Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥;", function(args, message){
            message.channel.send(CommandManager.GetRestrictedHelp());});
        this.AddCommand("restricted", 0, "invitefriend", "!invitefriend @DiscordTag", "–≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏ '–°—Ç—Ä–∞–Ω–Ω–∏–∫' –≤–º–µ—Å—Ç–æ —Ä–æ–ª–∏ '–û—á–µ—Ä–µ–¥—å';\n_–¥–æ—Å—Ç—É–ø–Ω–∞ –æ–ø—ã—Ç–Ω—ã–º —Å—Ç—Ä–∞–∂–∞–º_;", function(args, message){
            InviteFriend(message, (args.length > 1 ? args[1] : ""));
        });
        this.AddCommand("restricted", 2, "medals", "!medals", "—Å—Ç—Ä–∞–∂–∏ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –º–µ–¥–∞–ª–µ–π;", function(args, message){});
        this.AddCommand("restricted", 0, "mymt", "!mymt", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–∂–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —á–∞—Ç–µ (—Ç–æ–ª—å–∫–æ —Å–≤–æ–µ–π);", function(args, message){
            GetClanMemberOnlineTime(message, (args.length > 1 ? args[1] : 7));
        });
        this.AddCommand("restricted", 0, "region", "!region", "—Å–º–µ–Ω–∞ —Ä–µ–≥–∏–æ–Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞;", function(args, message){
            ChangeRegion(message);
        });
        this.AddCommand("restricted", 2, "rl", "!rl / !rl @DiscordTag", "–æ—Ç—á–µ—Ç –ø–æ —Å—Ç—Ä–∞–∂—É –Ω–∞ –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞;", function(args, message){});
        this.AddCommand("restricted", 0, "roles", "!roles / !roles @DiscordTag", "–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤—ã–¥–∞—á–∞ —Å—Ç—Ä–∞–∂—É –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã—Ö –º–µ–¥–∞–ª–µ–π;", function(args, message){
            Roles(message, args);
        });
        this.AddCommand("restricted", 0, "roles id:", "!roles id:type/id", "–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤—ã–¥–∞—á–∞ –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã—Ö –º–µ–¥–∞–ª–µ–π –ø–æ bungie id;", function(args, message){
            Roles(message, args);
        });
        this.AddCommand("restricted", 2, "triumph", "!triumph TRIUMPH_HASH", "–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å—Ç—Ä–∞–∂–µ–π –∫–ª–∞–Ω–∞, –ø–æ–ª—É—á–∏–≤—à–∏—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç—Ä–∏—É–º—Ñ;", function(args, message){});
        this.AddCommand("restricted", 2, "triumphs", "!triumphs", "—Ç–æ–ø 15 —Å—Ç—Ä–∞–∂–µ–π –∫–ª–∞–Ω–∞ –ø–æ –æ—á–∫–∞–º —Ç—Ä–∏—É–º—Ñ–æ–≤ —Ç–µ–∫—Å—Ç–æ–º;", function(args, message){});
        this.AddCommand("restricted", 2, "triumphs 1", "!triumphs gimmeimageplz", "—Ç–æ–ø 15 —Å—Ç—Ä–∞–∂–µ–π –∫–ª–∞–Ω–∞ –ø–æ –æ—á–∫–∞–º —Ç—Ä–∏—É–º—Ñ–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–º;", function(args, message){});
        this.AddCommand("restricted", 2, "—Å–±–æ—Ä", "!—Å–±–æ—Ä –î–î.–ú–ú –ß–ß:–ú–ú –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", "—Å–æ–∑–¥–∞–Ω–∏–µ —Å–±–æ—Ä–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ 6 —á–µ–ª–æ–≤–µ–∫;", function(args, message){});
        this.AddCommand("restricted", 2, "", "!—Å–±–æ—Ä –î–î.–ú–ú –ß–ß:–ú–ú [N] –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", "—Å–æ–∑–¥–∞–Ω–∏–µ —Å–±–æ—Ä–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ N —á–µ–ª–æ–≤–µ–∫;", function(args, message){});
 

        this.AddCommand("guildmaster", 2, "checksync", "!______________", "_______________;", function(args, message){});
        this.AddCommand("guildmaster", 0, "ck", "", "", function(args, message){
            ClanTime(message.channel, (args.length > 1 ? args[1] : 7), 'full');
        });
        this.AddCommand("guildmaster", 0, "clankick", "!clankick %days%", "–≤—ã–±–æ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∞–ª–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞–∂–µ–π;\n_–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 7 –¥–Ω–µ–π_;", function(args, message){
            ClanTime(message.channel, (args.length > 1 ? args[1] : 7), 'full');
        });
        this.AddCommand("guildmaster", 1, "ckp", "", "", function(args, message){
            ClanTime(message.channel, (args.length > 1 ? args[1] : 7));
        });
        this.AddCommand("guildmaster", 0, "clankickpub", "!clankickpub %days%", "–≤—ã–±–æ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ **—Å–∞–º—ã—Ö** –º–∞–ª–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞–∂–µ–π;\n_–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 7 –¥–Ω–µ–π_;", function(args, message){
            ClanTime(message.channel, (args.length > 1 ? args[1] : 7));
        });
        this.AddCommand("guildmaster", 2, "copy", "!copy", "—Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø–µ—Ä–µ–Ω–æ—Å–∞ –≤ –∞—Ä—Ö–∏–≤ —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–æ–≤ —Ä–µ–π–¥–æ–≤;", function(args, message){});
        this.AddCommand("guildmaster", 0, "csr", "!csr", "—Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π –≤—Å–µ–º—É –∫–ª–∞–Ω—É;", function(args, message){
            SetRoles(message.channel);
        });
        this.AddCommand("guildmaster", 2, "engreset", "!engreset", "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ä–µ—Å–µ—Ç–∞ –≤ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª;", function(args, message){});
        this.AddCommand("guildmaster", 2, "forum", "!forum LINKTEXT", "–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –Ω–∞–±–æ—Ä–µ –≤ –∫–∞–Ω–∞–ª –Ω–æ–≤–æ—Å—Ç–µ–π;", function(args, message){});
        this.AddCommand("guildmaster", 2, "forumtime", "!forumtime", "–≤—ã–¥–∞—Ç—å –≤—Å–µ–º —Å—Ç—Ä–∞–∂–∞–º —Ä–æ–ª–∏ –ø–µ—Ä–µ–¥ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –æ –Ω–∞–±–æ—Ä–µ;", function(args, message){});
        this.AddCommand("guildmaster", 0, "gmhelp", "!gmhelp", "—Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ì–ú-—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥;", function(args, message){
            message.channel.send(CommandManager.GetRestrictedHelp());
        });
        this.AddCommand("guildmaster", 0, "membertime", "!membertime @DiscrordTag %days%", "–≤—ã–±–æ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–∂–∞;\n_–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 7 –¥–Ω–µ–π_;", function(args, message){
            GetClanMemberOnlineTime(message, (args.length > 2 ? args[2] : 7), (args.length > 1 ? args[1] : message.member.id), true)
        });
        this.AddCommand("guildmaster", 2, "message", "!______________", "_______________;", function(args, message){});
        this.AddCommand("guildmaster", 0, "n", "!n", "—Å–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—á–∫–æ–≤ –≤ –∫–ª–∞–Ω–µ;", function(args, message){
            ShowNewbieList(message);
        });
        this.AddCommand("guildmaster", 2, "nicknames", "!nicknames", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤ —Å—Ç—Ä–∞–∂–µ–π;", function(args, message){});
        this.AddCommand("guildmaster", 2, "pmspam", "!pmspam", "—Å–ø–∞–º –≥–æ–≤–Ω–æ–º –≤ –ª–∏—á–∫—É –ø–æ —Ä–æ–ª–∏; –ù–ï –Æ–ó–ê–¢–¨;", function(args, message){});
        this.AddCommand("guildmaster", 2, "pvpdrop", "!pvpdrop", "—Å–Ω—è—Ç—å –≤—Å–µ –ø–≤–ø —Ä–æ–ª–∏;", function(args, message){});
        this.AddCommand("guildmaster", 0, "q", "!q", "—Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–∂–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏;", function(args, message){
            ShowQueueList(message);
        });
        this.AddCommand("guildmaster", 0, "qq", "!qq", "—Å–ø–∏—Å–æ–∫ –∞–Ω–∫–µ—Ç —Å—Ç—Ä–∞–∂–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏;", function(args, message){
            ShowQueueReqestsList(message);
        });
        this.AddCommand("guildmaster", 2, "raidadd", "!raidadd message_id member_id", "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ä–µ–π–¥ —Å—Ç—Ä–∞–∂–∞;", function(args, message){});
        this.AddCommand("guildmaster", 2, "raidkick", "!raidkick message_id member_id", "–∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ —Ä–µ–π–¥–∞ —Å—Ç—Ä–∞–∂–∞, –ø—Ä–∏–º–µ—Ä: https://media.discordapp.net/attachments/515244455033438209/626795525710020638/unknown.png;", function(args, message){});
        this.AddCommand("guildmaster", 2, "reset", "!reset", "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ä–µ—Å–µ—Ç–∞ –≤ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª;", function(args, message){});
        this.AddCommand("guildmaster", 2, "setmaxtriumphs", "!setmaxtriumphs NUMBER", "–æ–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç—Ä–∏—É–º—Ñ–æ–≤;", function(args, message){});
        this.AddCommand("guildmaster", 0, "size", "!size", "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–∂–µ–π –≤ —Å–æ—Å—Ç–∞–≤–∞—Ö;", function(args, message){
            ClanSize().then(value => message.channel.send(value));
        });
        this.AddCommand("guildmaster", 2, "sync", "!______________", "_______________;", function(args, message){});
        this.AddCommand("guildmaster", 2, "watermelon", "!watermelon @DiscrordTag", "–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–∂–∞ –Ω–∞ –∞–±—É–∑;", function(args, message){});
        this.AddCommand("guildmaster", 2, "xur", "!xur", "–≥–µ—Ä–µ–Ω–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –ó—É—Ä–∞ –≤ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª;", function(args, message){});
    }
}

/*
GM
    case 'checksync':	checksync.checksync(message.channel);					break;
    case 'sync':		roles.roles_bytag(message.channel, args.length > 1 ? args[1] : message.member.id, true);					break;
    case 'message':
        channel = client.channels.get(args[1]);
        var message = args.filter((_,i) => i > 1).join(" ");
        channel.send(message);
        break;
    case 'pmspam':
        var userlist = message.guild.roles.find(role => role.name == "–ü—É—Ç–Ω–∏–∫").members;
        
        users_to_send = [];
        userlist.forEach(function(user1111, i, userlist) { 
            users_to_send.push(user1111);
        });
        
        var i = 0;
        
        var pm_spam = function(){
            if(i < users_to_send.length){
                var member = users_to_send[i];
                var member_message_text = "–£–≤–∞–∂–∞–µ–º—ã–π –ü—É—Ç–Ω–∏–∫, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º.\nhttps://discordapp.com/channels/471020862045290496/479684908806307840/715354406735970345";
                member.send(member_message_text);
                console.log("pm "+ member.displayName);
                i++;
                setTimeout(pm_spam, 2000); 
            }
        }
        pm_spam();
        break;
    case 'watermelon':		watermelon.watermelon(message.channel, args.length > 1 ? args[1] : message.member.id);
        break;
    case 'setmaxtriumphs':
        if(args.length > 1){
            fs.writeFile('maxtriumphs.txt', args[1], function(error){
                if(error) throw error; // –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞S
            });
        }else{
            message.channel.send("–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö!");
        }
        break;
    case 'forum':
        fs.writeFile('forumlink.txt', message.content.slice(7), function(error){
            if(error) throw error; // –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
        });
        channel_news = client.channels.get("479684908806307840");
        channel_news.send(
            "–£–≤–∞–∂–∞–µ–º—ã–µ <@&471048548318969888>–∏, <@&564787660745605120>–∏ –∏ @everyone –æ—Å—Ç–∞–ª—å–Ω—ã–µ, –∫–æ–º—É –Ω–µ –±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–∞ —Å—É–¥—å–±–∞ –Ω–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞! <@&572759337836216330>\n"+
            "–ü–æ–¥–Ω–∏–º–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å—Ç –æ –Ω–∞–±–æ—Ä–µ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ —Å—Ç—Ä–µ–ª–æ—á–∫—É –≤–≤–µ—Ä—Ö –Ω–∞ —Ñ–æ—Ä—É–º–µ.\n"+
            message.content.slice(7)).then((msg)=>{
            msg.react("üÜó");
        });
        break;
    case 'forumtime':
        var userlistraw = message.guild.roles.find(role => role.id == "572759337836216330").members;
        userlist = [];
        userlistraw.forEach(function(user1111, i, userlistraw) { 
            userlist.push(user1111);
        });
        
        var i = 0;
        var seaker = message.guild.roles.find(role => role.name == "–Ω–µ –∞–ø–Ω—É–ª —Ç–µ–º—É –Ω–∞ —Ñ–æ—Ä—É–º–µ");
        var giverole = function(){
            if(i < userlist.length){
                var member = userlist[i];
                member.addRole(seaker);
                console.log("setRole forum (" + i + "/" + userlist.length + ")", member.displayName); 
                i++;
                setTimeout(giverole, 1000); 
                if (i == userlist.length) message.channel.send("—Ä–æ–ª–∏ –≤—ã–¥–∞–Ω—ã!");
            }
        }
        giverole();
        break;
    case 'testreset':
        var yyyy = date.getFullYear();
        var dd = date.getDate();
        if(dd<10) { dd='0'+dd; }
        var mm = date.getMonth()+1; 
        if(mm<10) { mm='0'+mm; } 
        
        message.channel.send(
            "Reset by Kyber3000\n"+
            "https://kyberscorner.files.wordpress.com/"+yyyy+"/"+mm+"/destiny-2-weekly-reset-summary-"+mm+"-"+dd+"-"+yyyy+".png\n"+
            "https://kyberscorner.files.wordpress.com/"+yyyy+"/"+mm+"/destiny-2-weekly-raid-challenges-by-kyber3000-"+mm+"-"+dd+"-"+yyyy+".png");
        break;
    case 'xur':
        reset.auth(boss);
        setTimeout(function (){
            reset.xur(message.channel);
        }, 2000); 
        break;
    case 'reset':
        reset.auth(boss);
        setTimeout(function (){
            reset.weeklyreset(message.channel);
        }, 2000); 
        break;
    case 'membertime':
        clantime.membertime(message, (args.length > 1 ? args[1].replace(/\D/g,'') : message.member.id), (args.length > 2 ? args[2] : 7), true);
        break;
    case 'copy':					raid.copy(client);					break;
    case 'raidadd':
        if(args.length > 2){
            var chan = client.channels.get("626432384643891220");
            chan.fetchMessage(args[1]).then(msg => {
                raid.yes(msg, client.users.get(args[2]), null);
                setTimeout(function (){
                    message.delete();
                }, 5000);
            });
        }else{
            message.channel.send('–£–∫–∞–∑–∞–Ω—ã –Ω–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
        };
        break;
    case 'raidkick':							
        if(args.length > 2){
            var chan = client.channels.get("626432384643891220");
            chan.fetchMessage(args[1]).then(msg => {
                raid.no(msg, client.users.get(args[2]), null);
                setTimeout(function (){
                    message.delete();
                }, 5000);
            });
        }else{
            message.channel.send('–£–∫–∞–∑–∞–Ω—ã –Ω–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
        };
        break;
    case 'size':			count.count(message);														break;
    case 'ck':
    case 'clankick':		clantime.clantime(message, (args.length > 1 ? args[1] : 7), 'full');		break;
    case 'ckp':
    case 'clankickpub':		clantime.clantime(message, (args.length > 1 ? args[1] : 7), 'pub');			break;
    case 'csr':				roles.set_clan_roles(message.channel);										break;
    case 'nicknames':		dclan.dclan(message, true, message.channel);								break;
    case 'q':				query.q(message);															break;
    case 'qq':				query.qq(message);															break;
    case 'n':				query.n(message);															break;
    case 'pvpdrop':
        var t1 = message.guild.roles.find(role => role.name == "üí† –õ–µ–≤–∞—è —Ä—É–∫–∞ –®–∞–∫—Å–∞");
        t1.members.forEach(function(member) {
            setTimeout(function (){
                member.removeRole(t1);
            }, 5000);
        });
        var t2 = message.guild.roles.find(role => role.name == "üí†üí† –ü—Ä–∞–≤–∞—è —Ä—É–∫–∞ –®–∞–∫—Å–∞");
        t2.members.forEach(function(member) {
            setTimeout(function (){
                member.removeRole(t2);
            }, 5000);
        });
        var t3 = message.guild.roles.find(role => role.name == "üí†üí†üí† –ú–∞—à–∏–Ω–∞");
        t3.members.forEach(function(member) {
            setTimeout(function (){
                member.removeRole(t3);
            }, 5000);
        });
        break;
}*/